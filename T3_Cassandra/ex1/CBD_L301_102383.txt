-- Criar uma key space
CREATE KEYSPACE cbd WITH replication={'class':'SimpleStrategy', 'replication_factor':1} ;

-- Usar a key space
USE cbd;

-- Criar uma tabela
create table users(
    id int,
    name text,
    nmec varint,
    PRIMARY KEY ( id )
);

-- Inserir dados numa tabela
insert into cbd.users (id, name, nmec) values(0, 'Vânia Morais', 102383);
insert into cbd.users (id, name, nmec) values(1, 'Diogo Ferreira', 95741);
insert into cbd.users (id, name, nmec) values(2, 'Margarida Fontes', 115743);
insert into cbd.users (id, name, nmec) values(35, 'Tiago Magalhães', 555555);

-- Mostrar a tabela
select * from users;

-- Apagar uma linha da tabela
delete from cbd.users where id=35;

-- Fazer update da linha
update cbd.users set nmec=123456 where id=1;

-- Apagar a tabela
drop table cbd.users;


-- Column Values - utilização de nested tuples, collections, etc:
--     Aqui podemos criar colunas com dados mais complexos, como listas, tuplos e mapas. Exemplo:
CREATE TABLE data (
    id UUID PRIMARY KEY,
    info tuple<text, int>,
    emails list<text>,
    addresses set<text>,
    properties map<text, text>
);

--Time-to-Live e Timestamp:
--    O TTL permite definir um tempo de vida para os dados de uma coluna. Já o timestamp serve para controlar quando uma coluna foi inserida ou atualizada. Exemplo:
-- Inserir com TTL (duração de 1 hora)
INSERT INTO data_with_ttl (id, value) VALUES (uuid(), 'some value') USING TTL 3600;

-- Inserir com Timestamp
INSERT INTO data_with_timestamp (id, value, timestamp_column) VALUES (uuid(), 'value', toTimestamp(now()));



